Team,,,,,,,,,
"POC: Earl Williams, earl.m.williams.civ@us.navy.mil , earl.williams@gsdsef.org , 619-807-6005 cell, 619-553-9561 ofc",,,,,,,,,
"Developer: Tan Vu, tan.d.vu.civ@us.navy.mil, 619-553-3649 ofc",,,,,,,,,
,,,,,,,,,
Overall Goal,,,,,,,,,
"The goal of this task is to develop a standalone app that can be run on a Mac (OS X 15.6+), which will apply a ruleset and information",,,,,,,,,
about science fair projects and available tables in order to assign each project to a table slot.  The inputs will be two CSV files,,,,,,,,,
"containing tables data and projects data.  The only output will be a CSV of table slot rows, that either assigns each slot to a project or leaves it unassigned.",,,,,,,,,
"No GUI is required, other than what is required to specify the two input CSVs and the location of the output CSV (or just save the output CSV to ~/Desktop or wherever is easy)",,,,,,,,,
"The app must execute on a Mac (OS X 15.6+), presumably via Java but other methods might be OK too if easier.",,,,,,,,,
,,,,,,,,,
Funding,,,,,,,,,
"This task is funded for 10-40 hours by the NIWC Pacific STEM office, though if we need ""more than 40 hours, that is fine"" (keeping Earl and Christian posted of course)",,,,,,,,,
Please charge your time on this task to OG-720000.STEMLBR ,,,,,,,,,
,,,,,,,,,
Background,,,,,,,,,
"The science fair has hundreds of student projects, whose display boards are placed onto",,,,,,,,,
hundreds of 4'x8' tables in rows in the exhibition hall.  By default we place two projects on,,,,,,,,,
"each table, giving each a 4'-wide space, so we can say that each table has two ""table slots.""",,,,,,,,,
"However, for various special cases we place only one project on a table, or leave slots blank",,,,,,,,,
"(see below).  For example, team projects get their own table (2 students instead of 1),",,,,,,,,,
as in the case of the rightmost display board at lower right in the photo.,,,,,,,,,
,,,,,,,,,
"The tables in the exhibition hall are placed in rows, mostly back-to-back.",,,,,,,,,
"Projects are placed on the tables in numerical order, left-to-right, snaking",,,,,,,,,
"around the hall from upper to lower left on a layout map, then across",,,,,,,,,
the center aisle and continuing from lower to upper right.  At right is an,,,,,,,,,
"upper left portion of the 2025 map, showing how table slots are numbered",,,,,,,,,
from left to right as you face each row from its aisle.  Rows 4 and 5 each ,,,,,,,,,
"have 7 tables, therefore 14 table slots.  The snaking is shown by Row 4",,,,,,,,,
slot 14 (blue label) wrapping around next to Row 5 slot 1 (green label).,,,,,,,,,
,,,,,,,,,
"The word ""row"" is used in this document with two different meanings, hopefully clear in context: a row of tables, vs. a row in a CSV file.",,,,,,,,,
,,,,,,,,,
App Inputs & Outputs (see sample CSV files below and also provided separately),,,,,,,,,
,,,,,,,,,
Input CSV #1 (Table Slots Data): four data fields (columns) per table slot (row):,,,,,,,,,
,Row,"(integer, positive and <100)",,,,,,,
,rowNumSlots,"(integer, positive and <20)",,,,,,,
,tableSlotID,"(integer, positive and <20 since counted per row)",,,,,,,
,isReserved,"(boolean, True means do not assign a project to this slot)",,,,,,,
,,,,,,,,,
Input CSV #2 (Projects Data): four data fields (columns) per project (row):,,,,,,Note: CSV #2 will always have fewer rows than CSV #1,,,
,projectID,"(integer, positive and <1000, sequential with gaps between categories)",,,,,,,
,isTeam,"(boolean, True means a project by two students instead of one)",,,,,,,
,isFirstInCat,"(boolean, True means this is the first project in its category)",,,,"Note: in theory this flag could be calculated, not provided in the CSV,",,,
,,,,,,but for simplicity let's just keep it in the CSV for now,,,
,Category,"(string, e.g., ""SR - Animal Sciences"")",,,,,,,
,,,,,,,,,
"Output CSV (Project to Table Slot Assignments): six data fields (columns) per table slot ID (row), or just the first three fields if the table slot is left unassigned:",,,,,,,,,
,Row,"(integer, positive and <100)",,,,,,,
,tableSlotID,"(integer, positive and <20)",,,,,,,
,IsUnassigned,"(boolean, True means no project assigned to that slot)",,,,,,,
,projectID,"(integer, positive and <1000)",,,,,,,
,isTeam,"(boolean, True means a project by two students instead of one)",,,,,,,
,Category,"(string, e.g., ""SR - Animal Sciences"")",,,,,,,
,,,,,,,,,
Assignment Rules and Special Cases,,,,,,,,,
,,,,,,,,,
"Somewhat like a casino dealer, all this app does is just ""deal"" the next project into the next permitted table slot.",,,,,,,,,
,,,,,,,,,
"Here are the ""next permitted"" rules in plain English (note that they can combine with each other):",,,,,,,,,
,1. Any table slot marked as reserved in CSV #1 is left empty (unassigned),,,,,,,,
,"2. Team projects get two table slots, and their own full table, so the first one must be odd (so that the project spans slots 1-2, 7-8, etc, and not 2-3, 8-9 etc), which may require an empty (unassigned) ""spacer"" slot",,,,,,,,
,"3. A single table slot is left empty (unassigned) between each category, EXCEPT when (not needed because) the last project in the previous category was at a row end",,,,,,,,
,,,,,,,,,
"In other words, before simply dealing currentProject into currentSlot, there are four possible reasons why currentSlot should be left empty, and we should move on to the next slot:",,,,,,,,,
,1. currentSlot is reserved in Input CSV #1 ,,,,,,,,
,"2. currentProject is a team project, AND currentSlot is the last slot in a row, so we leave it empty because a team project won't fit",,,,,,,,
,"3. currentProject is the first in its category in Input CSV #2, AND currentSlot is not slot #1 in a row, so we leave an empty slot after the end of the previous category",,,,,,,,
,"4. currentProject is a team project, AND currentSlot is even-numbered, so we leave an empty slot to prevent having the team project bridge two tables",,,,,,,,
,,,,,,,,,
"Here is my pseudocode to implement these rules, let me know if you find any errors or unnecessary complexity:",,,,,,,,,
,,,,,,,,,
A. Initialization:,set currentRow = 1,,,,,,,,
,set currentSlot = 0,,,,,,,,
,set currentProject from the first row in Input CSV #2,,,,,,,,
,,,,,,,,,
B. Main Loop: ,"; while not finished with Input CSV #1, read the next table slot data row, then either leave it unassigned or assign it to the current project from Input CSV #2, writing 1-2 rows to the Output CSV",,,,,,,,
,,,,,,,,,
,set currentSlot++ and read its data from Input CSV #1 ,,,,,,; by default we simply increment currentSlot each time...but then there are special cases to handle,,
,set IsUnassigned = False,,,,,,; clear flag,,
,,,,,,,,,
,"if isReserved(currentSlot) = True,",,,,,,,,
,,set isUnassigned = True,,,,,,,
,,write an Unassigned row to the Output CSV for currentSlot,,,,,; write to Output CSV,,(left-empty reason #1)
,,exit loop to go to next table slot iteration,,,,,; go to next loop iteration,,
,,,,,,,,,
,,,,,,,"; set isRowFull flag, if currentProject cannot fit in currentRow for either of two reasons",,
,"if currentSlot > rowNumSlots(currentRow),",,,,,,"; can't assign (for example) to non-existent ""slot 15"" in a 14-slot row",,
,,set isRowFull = True,,,,,,,
,"if isTeam(currentProject) AND currentSlot = rowNumSlots(currentRow),",,,,,,"; can't assign a team project to the last slot in a row, because it needs a full table",,
,,set isRowFull = True and isUnassigned = True,,,,,,,
,,write an Unassigned row to the Output CSV for currentSlot,,,,,; write to Output CSV,,(left-empty reason #2)
,,,,,,,"; continue, do NOT go to the next loop iteration",,
,,,,,,,,,
,"if isRowFull = True,",,,,,,; (for either reason above),,
,,set currentRow++ and currentSlot = 0 and isRowFull = False,,,,,"; prepare to assign to slot 1 in the next row, and reset the isRowFull flag",,
,,exit loop to go to next table slot iteration,,,,,; go to next loop iteration,,
,ELSE,,,,,,,,
,,"if isFirstInCat(currentProject) = True AND currentSlot > 1, ",,,,,"; since isRowFull = False at this point, we know we have still have room in currentRow for currentProject",,
,,,set isUnassigned = True,,,,,,
,,,write an Unassigned row to the Output CSV for currentSlot,,,,; write to Output CSV,,(left-empty reason #3)
,,,set currentSlot++ ,,,,"; continue, do NOT go to the next loop iteration",,
,,,,,,,,,
,,,,,,,,,
,,,,,,,,,
,,"if isTeam(currentProject) AND isEven(currentSlot),",,,,,"; can't assign a team project to an even-numbered slot, because it needs a full table",,
,,,set isUnassigned = True,,,,,,
,,,write an Unassigned row to the Output CSV for currentSlot,,,,; write to Output CSV,,(left-empty reason #4)
,,,exit loop to go to next table slot iteration,,,,; go to next loop iteration,,
,,,,,,,,,
,"; if we've gotten to this point in the loop, we finally have a simple assignment of a solo or team project",,,,,,,,
,,,,,,,,,
,"if isTeam(currentProject),",,,,,,,,
,,write a row to the Output CSV with currentProject assigned to currentSlot,,,,,; write to Output CSV,,(Team projects get two slots)
,,set currentSlot++ ,,,,,,,
,,write a row to the Output CSV with currentProject assigned to currentSlot,,,,,; write to Output CSV,,(second slot for that team project)
,ELSE,,,,,,,,
,,write a row to the Output CSV with currentProject assigned to currentSlot,,,,,; write to Output CSV,,(Solo projects get one slot)
,,,,,,,,,
,set currentProject++,,,,,,; time to assign the next project (next B. main loop iteration above),,
,,,,,,,,,
,,,,,,,,,
CSV Samples (provided here with annotations that may be helpful in comparing with the Output CSV; will provide as separate files too),,,,,,,,,
,,,,,,,,,
Input CSV #1 (Table Slots Data): four data fields (columns) per table slot (row):,,,,,,,,,
,,,,,,,,,
"(colors and borders below are for only for readability, not in the CSV of course)",,,,,,,,,
Row,rowNumSlots,tableSlotID,isReserved,,,,,,
1,12,1,FALSE,,,,,,
1,12,2,FALSE,,,,,,
1,12,3,FALSE,,,,,,
1,12,4,FALSE,,,,,,
1,12,5,FALSE,,,,,,
1,12,6,FALSE,,,,,,
1,12,7,FALSE,,,,,,
1,12,8,FALSE,,,,,,
1,12,9,FALSE,,,,,,
1,12,10,FALSE,,,,,,
1,12,11,FALSE,,,,,,
1,12,12,FALSE,,,,,,
2,12,1,FALSE,,,,,,
2,12,2,FALSE,,,,,,
2,12,3,FALSE,,,,,,
2,12,4,FALSE,,,,,,
2,12,5,FALSE,,,,,,
2,12,6,FALSE,,,,,,
2,12,7,FALSE,,,,,,
2,12,8,FALSE,,,,,,
2,12,9,FALSE,,,,,,
2,12,10,FALSE,,,,,,
2,12,11,FALSE,,,,,,
2,12,12,FALSE,,,,,,
3,12,1,FALSE,,,,,,
3,12,2,FALSE,,,,,,
3,12,3,FALSE,,,,,,
3,12,4,FALSE,,,,,,
3,12,5,FALSE,,,,,,
3,12,6,FALSE,,,,,,
3,12,7,FALSE,,,,,,
3,12,8,FALSE,,,,,,
3,12,9,FALSE,,,,,,
3,12,10,FALSE,,,,,,
3,12,11,FALSE,,,,,,
3,12,12,FALSE,,,,,,
4,14,1,FALSE,,,,,,
4,14,2,FALSE,,,,,,
4,14,3,FALSE,,,,,,
4,14,4,FALSE,,,,,,
4,14,5,FALSE,,,,,,
4,14,6,FALSE,,,,,,
4,14,7,FALSE,,,,,,
4,14,8,FALSE,,,,,,
4,14,9,FALSE,,,,,,
4,14,10,FALSE,,,,,,
4,14,11,FALSE,,,,,,
4,14,12,FALSE,,,,,,
4,14,13,FALSE,,,,,,
4,14,14,TRUE,,,,,,
5,14,1,FALSE,,,,,,
5,14,2,FALSE,,,,,,
5,14,3,FALSE,,,,,,
5,14,4,FALSE,,,,,,
5,14,5,FALSE,,,,,,
5,14,6,FALSE,,,,,,
5,14,7,FALSE,,,,,,
5,14,8,FALSE,,,,,,
5,14,9,FALSE,,,,,,
5,14,10,FALSE,,,,,,
5,14,11,FALSE,,,,,,
5,14,12,FALSE,,,,,,
5,14,13,FALSE,,,,,,
5,14,14,FALSE,,,,,,
,,,,,,,,,
,,,,,,,,,
"Input CSV #2 (Projects Data): four data fields (columns) per project (row), N = 60:",,,,,,,,,
,,,,,,,,,
"(colors and borders below are for only for readability, not in the CSV of course)",,,,,,,,,
projectID,isTeam,isFirstInCat,Category,,,,,,
101,FALSE,TRUE,SR - Animal Sciences,,,,,,
102,FALSE,FALSE,SR - Animal Sciences,,,,,,
103,FALSE,FALSE,SR - Animal Sciences,,,,,,
104,FALSE,FALSE,SR - Animal Sciences,,,,,,
105,FALSE,FALSE,SR - Animal Sciences,,,,,,
106,FALSE,FALSE,SR - Animal Sciences,,,,,,
111,FALSE,TRUE,SR - Behavioral and Social Sciences,,,,,,
112,FALSE,FALSE,SR - Behavioral and Social Sciences,,,,,,
113,TRUE,FALSE,SR - Behavioral and Social Sciences,,,,,,
114,FALSE,FALSE,SR - Behavioral and Social Sciences,,,,,,
115,FALSE,FALSE,SR - Behavioral and Social Sciences,,,,,,
116,TRUE,FALSE,SR - Behavioral and Social Sciences,,,,,,
117,FALSE,FALSE,SR - Behavioral and Social Sciences,,,,,,
118,FALSE,FALSE,SR - Behavioral and Social Sciences,,,,,,
119,FALSE,FALSE,SR - Behavioral and Social Sciences,,,,,,
120,FALSE,FALSE,SR - Behavioral and Social Sciences,,,,,,
121,FALSE,FALSE,SR - Behavioral and Social Sciences,,,,,,
122,FALSE,FALSE,SR - Behavioral and Social Sciences,,,,,,
123,FALSE,FALSE,SR - Behavioral and Social Sciences,,,,,,
124,FALSE,FALSE,SR - Behavioral and Social Sciences,,,,,,
131,TRUE,TRUE,SR - Biochemistry,,,,,,
132,TRUE,FALSE,SR - Biochemistry,,,,,,
141,FALSE,TRUE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,,,
142,FALSE,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,,,
143,FALSE,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,,,
144,FALSE,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,,,
145,FALSE,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,,,
146,FALSE,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,,,
147,FALSE,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,,,
148,FALSE,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,,,
149,FALSE,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,,,
150,FALSE,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,,,
151,FALSE,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,,,
152,FALSE,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,,,
153,FALSE,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,,,
154,FALSE,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,,,
155,FALSE,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,,,
156,FALSE,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,,,
157,FALSE,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,,,
158,FALSE,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,,,
159,FALSE,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,,,
171,TRUE,TRUE,SR - Cellular and Molecular Biology,,,,,,
172,FALSE,FALSE,SR - Cellular and Molecular Biology,,,,,,
173,FALSE,FALSE,SR - Cellular and Molecular Biology,,,,,,
174,FALSE,FALSE,SR - Cellular and Molecular Biology,,,,,,
181,FALSE,TRUE,SR - Chemistry,,,,,,
182,FALSE,FALSE,SR - Chemistry,,,,,,
183,TRUE,FALSE,SR - Chemistry,,,,,,
191,FALSE,TRUE,SR - Computational Biology and Bioinformatics,,,,,,
192,FALSE,FALSE,SR - Computational Biology and Bioinformatics,,,,,,
193,FALSE,FALSE,SR - Computational Biology and Bioinformatics,,,,,,
194,FALSE,FALSE,SR - Computational Biology and Bioinformatics,,,,,,
195,FALSE,FALSE,SR - Computational Biology and Bioinformatics,,,,,,
196,TRUE,FALSE,SR - Computational Biology and Bioinformatics,,,,,,
197,FALSE,FALSE,SR - Computational Biology and Bioinformatics,,,,,,
198,FALSE,FALSE,SR - Computational Biology and Bioinformatics,,,,,,
199,FALSE,FALSE,SR - Computational Biology and Bioinformatics,,,,,,
200,FALSE,FALSE,SR - Computational Biology and Bioinformatics,,,,,,
201,FALSE,FALSE,SR - Computational Biology and Bioinformatics,,,,,,
202,FALSE,FALSE,SR - Computational Biology and Bioinformatics,,,,,,
,,,,,,,,,
,,,,,,,,,
Output CSV (Table Slot Assignments to Projects or Empty): six data fields (columns) per project (row):,,,,,,,,,
,,,,,,,,,
Legend:,fields from CSV #1,,,,,,,,
,fields calculated by rules,,,,,,,,
,fields from CSV #2,,,,,,,,
,,,,,,,,,
"(colors below are for only for readability, with respect to the four reasons above for leaving a table slot unassigned, not in the CSV of course)",,,,,,,,,
Row,tableSlotID,isUnassigned,projectID,isTeam,Category,,,,
1,1,FALSE,101,FALSE,SR - Animal Sciences,,,,
1,2,FALSE,102,FALSE,SR - Animal Sciences,,,,
1,3,FALSE,103,FALSE,SR - Animal Sciences,,,,
1,4,FALSE,104,FALSE,SR - Animal Sciences,,,,
1,5,FALSE,105,FALSE,SR - Animal Sciences,,,,
1,6,FALSE,106,FALSE,SR - Animal Sciences,,,,
1,7,TRUE,,,,,,,
1,8,FALSE,111,FALSE,SR - Behavioral and Social Sciences,,,,
1,9,FALSE,112,FALSE,SR - Behavioral and Social Sciences,,,,
1,10,TRUE,,,,,,,
1,11,FALSE,113,TRUE,SR - Behavioral and Social Sciences,,,,
1,12,TRUE,113,TRUE,SR - Behavioral and Social Sciences,,,,
2,1,FALSE,114,FALSE,SR - Behavioral and Social Sciences,,,,
2,2,FALSE,115,FALSE,SR - Behavioral and Social Sciences,,,,
2,3,FALSE,116,TRUE,SR - Behavioral and Social Sciences,,,,
2,4,TRUE,116,TRUE,SR - Behavioral and Social Sciences,,,,
2,5,FALSE,117,FALSE,SR - Behavioral and Social Sciences,,,,
2,6,FALSE,118,FALSE,SR - Behavioral and Social Sciences,,,,
2,7,FALSE,119,FALSE,SR - Behavioral and Social Sciences,,,,
2,8,FALSE,120,FALSE,SR - Behavioral and Social Sciences,,,,
2,9,FALSE,121,FALSE,SR - Behavioral and Social Sciences,,,,
2,10,FALSE,122,FALSE,SR - Behavioral and Social Sciences,,,,
2,11,FALSE,123,FALSE,SR - Behavioral and Social Sciences,,,,
2,12,FALSE,124,FALSE,SR - Behavioral and Social Sciences,,,,
3,1,FALSE,131,TRUE,SR - Biochemistry,,,,
3,2,TRUE,131,TRUE,SR - Biochemistry,,,,
3,3,FALSE,132,TRUE,SR - Biochemistry,,,,
3,4,TRUE,132,TRUE,SR - Biochemistry,,,,
3,5,TRUE,,,,,,,
3,6,FALSE,141,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,
3,7,FALSE,142,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,
3,8,FALSE,143,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,
3,9,FALSE,144,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,
3,10,FALSE,145,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,
3,11,FALSE,146,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,
3,12,FALSE,147,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,
4,1,FALSE,148,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,
4,2,FALSE,149,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,
4,3,FALSE,150,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,
4,4,FALSE,151,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,
4,5,FALSE,152,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,
4,6,FALSE,153,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,
4,7,FALSE,154,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,
4,8,FALSE,155,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,
4,9,FALSE,156,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,
4,10,FALSE,157,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,
4,11,FALSE,158,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,
4,12,FALSE,159,FALSE,"SR - Biomedical/Health Sciences, and Biomedical Engineering",,,,
4,13,TRUE,,,,,,,
4,14,TRUE,,,,,,,
5,1,FALSE,171,TRUE,SR - Cellular and Molecular Biology,,,,
5,2,TRUE,171,TRUE,SR - Cellular and Molecular Biology,,,,
5,3,FALSE,172,FALSE,SR - Cellular and Molecular Biology,,,,
5,4,FALSE,173,FALSE,SR - Cellular and Molecular Biology,,,,
5,5,FALSE,174,FALSE,SR - Cellular and Molecular Biology,,,,
5,6,TRUE,,,,,,,
5,7,FALSE,181,FALSE,SR - Chemistry,,,,
5,8,FALSE,182,FALSE,SR - Chemistry,,,,
5,9,FALSE,183,TRUE,SR - Chemistry,,,,
5,10,TRUE,183,TRUE,SR - Chemistry,,,,
5,11,TRUE,,,,,,,
5,12,FALSE,191,FALSE,SR - Computational Biology and Bioinformatics,,,,
5,13,FALSE,192,FALSE,SR - Computational Biology and Bioinformatics,,,,
5,14,FALSE,193,FALSE,SR - Computational Biology and Bioinformatics,,,,
6,1,FALSE,194,FALSE,SR - Computational Biology and Bioinformatics,,,,
6,2,FALSE,195,FALSE,SR - Computational Biology and Bioinformatics,,,,
6,3,FALSE,196,TRUE,SR - Computational Biology and Bioinformatics,,,,
6,4,TRUE,196,TRUE,SR - Computational Biology and Bioinformatics,,,,
6,5,FALSE,197,FALSE,SR - Computational Biology and Bioinformatics,,,,
6,6,FALSE,198,FALSE,SR - Computational Biology and Bioinformatics,,,,
6,7,FALSE,199,FALSE,SR - Computational Biology and Bioinformatics,,,,
6,8,FALSE,200,FALSE,SR - Computational Biology and Bioinformatics,,,,
6,9,FALSE,201,FALSE,SR - Computational Biology and Bioinformatics,,,,
6,10,FALSE,202,FALSE,SR - Computational Biology and Bioinformatics,,,,